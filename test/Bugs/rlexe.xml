<?xml version="1.0" encoding="utf-8"?>
<regress-exe>
  <test>
    <default>
      <files>bug602.js</files>
      <baseline>bug602_3.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>bug764.js</files>
      <baseline>bug764.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>withnonativeApplyOptimizationBug3433559.js</files>
      <compile-flags>-nonative</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>Win8_486977_BranchStrictEqual.js</files>
      <baseline>Win8_486977_BranchStrictEqual.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>Win8_459638.js</files>
      <baseline>Win8_459638.baseline</baseline>
      <tags>exclude_x86,exclude_x64</tags>
      <!-- The bug is related to ARM only -->
      <compile-flags>-forceNative -off:simpleJit</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_OS_1197716.js</files>
      <compile-flags>-deferparse</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>addexception.js</files>
      <baseline>addexception.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>regalloc.js</files>
      <baseline>regalloc.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>randombug.js</files>
      <baseline>randombug.baseline</baseline>
      <compile-flags>-CollectGarbage -ExtendedErrorStackForTestHost -off:earlyreferenceerrors</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>blue_532460.js</files>
      <compile-flags>-CollectGarbage -MaxinterpretCount:1 -MaxSimpleJITRunCount:0 -loopinterpretcount:1 -force:deferparse</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>bug56026.js</files>
      <tags>Slow</tags>
    </default>
  </test>
  <test>
    <default>
      <files>bug56026_minimal.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>bug56026_minimalWithProperties.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>bug56026_nested.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>bug56026_trycatch.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>blue_245702.js</files>
      <baseline>blue_245702.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <compile-flags>-maxinterpretcount:2 -maxsimplejitruncount:5  -off:inline</compile-flags>
      <files>bug547302.js</files>
      <tags>exclude_shp</tags>
    </default>
  </test>
  <test>
    <default>
      <compile-flags>-maxinterpretcount:1 -maxsimplejitruncount:2  -MaxLinearStringCaseCount:2 -MaxLinearIntCaseCount:2 -forceserialized -MinSwitchJumpTableSize:3 -bgjit- -loopinterpretcount:1 -force:polymorphicinlinecache -force:fieldcopyprop -sse:2 -force:interpreterautoprofile</compile-flags>
      <files>bug215238.mul-53-ovf.js</files>
      <baseline>bug215238.mul-53-ovf.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <compile-flags>-maxinterpretcount:1 -maxsimplejitruncount:1  -MinSwitchJumpTableSize:3 -bgjit- -loopinterpretcount:1 -force:rejit -force:ScriptFunctionWithInlineCache -force:fixdataprops</compile-flags>
      <files>bug215238-shrua.js</files>
      <baseline>bug215238-shrua.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <compile-flags>-maxinterpretcount:1 -maxsimplejitruncount:1  -force:polymorphicinlinecache -MinSwitchJumpTableSize:2 -force:rejit -force:ScriptFunctionWithInlineCache -force:atom -off:ArrayCheckHoist -force:fixdataprops -ForceArrayBTree</compile-flags>
      <files>bug215238.shrua-2.js</files>
      <baseline>bug215238.shrua-2.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <compile-flags>-maxinterpretcount:1 -off:simplejit</compile-flags>
      <files>bug435809.js</files>
    </default>
  </test>
  <test>
    <default>
      <compile-flags>-maxinterpretcount:1 -off:simplejit -force:fixdataprops</compile-flags>
      <files>bug594298.js</files>
    </default>
  </test>
  <test>
    <default>
      <compile-flags>-loopinterpretcount:1 -bgjit- -maxsimplejitruncount:1 -maxinterpretcount:1 -force:inline</compile-flags>
      <files>bug661952.js</files>
    </default>
  </test>
  <test>
    <default>
      <compile-flags>-loopinterpretcount:1 -bgjit- -maxsimplejitruncount:1 -maxinterpretcount:1 -force:deferparse -force:inline</compile-flags>
      <files>bug724121.js</files>
    </default>
  </test>
  <test>
    <default>
      <compile-flags>-maxinterpretcount:1 -force:fieldcopyprop -forceserialized</compile-flags>
      <files>deserializationbug339404.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>bug843670.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>bug934443.js</files>
      <compile-flags>-force:fieldcopyprop -off:dynamicprofile</compile-flags>
      <tags>exclude_sanitize_address</tags>
    </default>
  </test>
  <test>
    <default>
      <files>vso_os_1091425.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>bug1092916.js</files>
      <compile-flags>-mic:1 -off:simplejit</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>blue_1096569.js</files>
      <compile-flags>-MaxinterpretCount:2 -off:simplejit -force:Inline -off:insertnops</compile-flags>
      <baseline>blue_1096569.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>blue_1086262.js</files>
      <compile-flags>-off:insertnops -bgjit- -fja:2 -off:simplejit -force:fieldcopyprop -off:aggressiveinttypespec</compile-flags>
      <baseline>blue_1086262.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>bug1288931.js</files>
      <compile-flags>-mic:1 -off:simplejit -off:fastpath</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>OS_1362136.js</files>
      <compile-flags>-mic:1 -off:simplejit -off:fastpath</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_OS_4683246.js</files>
      <tags>exclude_dynapogo</tags>
      <compile-flags>-loopinterpretcount:0 -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>fabs1.js</files>
      <tags>exclude_dynapogo,require_backend,require_asmjs</tags>
      <compile-flags>-off:backend -asmjs -testtrace:asmjs</compile-flags>
      <baseline>fabs1.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>OS_5248645.js</files>
      <tags>exclude_dynapogo</tags>
      <compile-flags>-maxinterpretCount:2 -off:simplejit -off:dynamicProfile -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>OS_5553123.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>symbol_tostring.js</files>
      <compile-flags>-maxsimplejitruncount:1 -maxinterpretcount:1 -force:fieldcopyprop</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>default_undodefer.js</files>
      <compile-flags>-forcedeferparse -forceundodefer</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>Bug_resetisdead.js</files>
      <compile-flags>-on:prelowererpeeps</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_es5array.js</files>
      <compile-flags>-off:NativeArray -ForceES5Array</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>simpletypehandler-property-deletion.js</files>
      <compile-flags>-args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>HasOnlyWritableDataProperties-cross-context.js</files>
      <compile-flags>-nonative</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>bug9080773.js</files>
      <compile-flags>-maxinterpretcount:1 -off:simplejit</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>bug9080773_2.js</files>
      <compile-flags>-maxinterpretcount:1 -maxsimplejitruncount:1</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>bug8554038.js</files>
      <baseline>bug8554038.baseline</baseline>
      <compile-flags>-maxinterpretcount:1 -off:simplejit</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>invertloop_bug.js</files>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>typespec_bug.js</files>
      <compile-flags>-maxinterpretcount:1 -maxsimplejitruncount:1 -bgjit-</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>deletenonconfig.js</files>
      <compile-flags>-args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>misc_bugs.js</files>
      <compile-flags>-args summary -endargs</compile-flags>
      <tags>exclude_windows</tags>
    </default>
  </test>
  <test>
    <default>
      <files>cross_context_test.js</files>
      <compile-flags>-args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>json_bugs.js</files>
      <compile-flags>-args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>bug10191241.js</files>
      <compile-flags>-forceundodefer</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>InlineFunctionParameterWithInfiniteLoop.js</files>
      <compile-flags>-maxinterpretcount:1 -off:simplejit</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>Math.abs_TypeSpecOnIntMin.js</files>
      <compile-flags>-loopinterpretcount:1 -bgjit- -maxsimplejitruncount:1 -maxinterpretcount:1 -oopjit-</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>bug10026875.js</files>
      <baseline>bug10026875.baseline</baseline>
      <compile-flags>-maxinterpretcount:1 -off:simplejit</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>MissToGenerateStStSlotForJITLoopBody.js</files>
      <compile-flags>-mic:1 -off:simplejit -oopjit- -bgjit-</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>cmpfgpeep.js</files>
      <compile-flags> -maxsimplejitruncount:1 -maxinterpretcount:1 </compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>bug11026788.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>bug11576900.js</files>
      <compile-flags>-lic:1 -bgjit-</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>bug12628506.js</files>
      <compile-flags>-loopinterpretcount:1</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>bug13172050.js</files>
      <compile-flags>-pageheap:2</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>bug13213828.js</files>
      <compile-flags>-mic:1 -off:simplejit</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>valueInfoLossBug.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>os11907290.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>bug13383062.js</files>
      <compile-flags>-maxinterpretcount:2 -off:simplejit -off:lossyinttypespec -bgjit-</compile-flags>
      <baseline>bug13383062.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>profiledArgs.js</files>
      <compile-flags>-off:inlineConstructors</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>bug14323330.js</files>
      <compile-flags>-args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>bug13830477.js</files>
      <baseline>bug13830477.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>bug15490382.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>bug_OS14326981.js</files>
      <compile-flags>-args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>bug14057294.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>bug_OS14115684.js</files>
      <compile-flags>-forceundodefer</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>inbug.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>inbug2.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>instancebug.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>missingvalue.js</files>
      <compile-flags>-off:ArrayMissingValueCheckHoist</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>symcmpbug.js</files>
    </default>
  </test>
  <test> 
    <default> 
      <files>bug_OS17417473.js</files> 
      <compile-flags>-pageheap:2 -CollectGarbage -lic:4 -Sja:4 -Fja:6 -maxInterpretCount:2 -MinBailOutsBeforeRejit:2 -args summary -endargs</compile-flags> 
    </default> 
  </test>
  <test> 
    <default> 
      <files>HomeObjInLoop.js</files> 
      <compile-flags>-forceNative -forcejitloopbody -off:aggressiveinttypespec -off:ArrayCheckHoist</compile-flags> 
    </default> 
  </test> 
  <test>
    <default>
      <files>bug17785360.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>bug_OS17530048.js</files>
      <compile-flags>-force:deferparse -parserstatecache -useparserstatecache</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>skipping_nested_deferred_incorrect_function_id.js</files>
      <compile-flags>-force:deferparse -parserstatecache -useparserstatecache</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>withSplitScope.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>bug_OS17614914.js</files>
    </default>
  </test> 
  <test>
    <default>
      <files>OS_17745531.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>SuperUndoDeferIssue.js</files>
      <compile-flags>-forceundodefer</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>ArgumentsAttrIssue.js</files>
      <compile-flags>-force:cachedScope</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>deferredStubBugs.js</files>
      <compile-flags>-force:deferparse -parserstatecache -useparserstatecache</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>SuperAccessInGlobalLambda.js</files>
      <baseline>SuperAccessInGlobalLambda.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>bug_5572_wscript_loadscript_loadmodule.js</files>
      <compile-flags>-args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>function_id_destructured_reparse.js</files>
      <compile-flags>-useparserstatecache -parserstatecache -force:deferparse</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_5585.js</files>
      <compile-flags>-esdynamicimport -mutehosterrormsg -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>loopcrash.js</files>
      <compile-flags>-maxinterpretcount:1 -maxsimplejitruncount:1 -MinMemOpCount:0 -werexceptionsupport  -bgjit- -loopinterpretcount:1</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_OS18260560.js</files>
      <compile-flags>-force:deferparse</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_5883.js</files>
      <compile-flags>-args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_OS18926499.js</files>
      <compile-flags>-force:deferparse</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>Bug19767482.js</files>
      <compile-flags>-maxinterpretcount:1 -bgjit- -oopjit- -loopinterpretcount:1 -maxsimplejitruncount:2</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>Bug19948792.js</files>
      <compile-flags>-maxinterpretcount:1 -bgjit- -oopjit- -loopinterpretcount:1 -maxsimplejitruncount:2</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_6179.js</files>
      <compile-flags>-args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_OS21193960.js</files>
      <compile-flags>-maxinterpretcount:1 -maxsimplejitruncount:2 -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_6239.js</files>
      <compile-flags>-force:deferparse</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_6277.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>bug_OS23102586.js</files>
      <compile-flags>-force:deferparse</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_6239.js</files>
      <compile-flags>-force:deferparse</compile-flags>
    </default>
  </test>
</regress-exe>
