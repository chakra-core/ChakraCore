<?xml version="1.0" encoding="utf-8"?>
<regress-exe>
  <test>
    <default>
      <files>bug318.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>bug41530.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>bug42111.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>bug70.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>bug713.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>bug1788761.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>bug1868543.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>isarrbug.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>bug-divbyConstOptim.js</files>
      <compile-flags> -maxsimplejitruncount:2 -maxinterpretcount:1</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>bug469.js</files>
      <compile-flags>-maxinterpretcount:1 -bgjit- -loopinterpretcount:1 -force:fixdataprops -off:aggressiveinttypespec -off:bailonnoprofile</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>bug3831075.js</files>
      <compile-flags>-loopinterpretcount:1 -off:bailonnoprofile</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>bug5579910.js</files>
      <compile-flags>-bgjit- -mic:1</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>conv_bool.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>CmBail.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>CmPeeps.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>cse1.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>cse2.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>clz.js</files>
      <compile-flags>-lic:1 -mic:1 -msjrc:1 -bgjit- -sse:2</compile-flags>
      <baseline>clz.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>cse3.js</files>
      <compile-flags>-loopinterpretcount:0</compile-flags>
      <baseline>cse3.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>NullTypeSpec.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>optpeep.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>shru_peep.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>shru_intrange.js</files>
      <compile-flags>-lic:1 -off:simplejit</compile-flags>
      <baseline>shru_intrange.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test0.js</files>
      <baseline>test0.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test1.js</files>
      <baseline>test1.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test10.js</files>
      <baseline>test10.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test11.js</files>
      <baseline>test11.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test12.js</files>
      <baseline>test12.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test13.js</files>
      <baseline>test13.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test14.js</files>
      <baseline>test14.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test15.js</files>
      <baseline>test15.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test16.js</files>
      <baseline>test16.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test17.js</files>
      <baseline>test17.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test18.js</files>
      <baseline>test18.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test19.js</files>
      <baseline>test19.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test2.js</files>
      <baseline>test2.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test20.js</files>
      <baseline>test20.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test21.js</files>
      <baseline>test21.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test22.js</files>
      <baseline>test22.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test23.js</files>
      <baseline>test23.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test24.js</files>
      <baseline>test24.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test25.js</files>
      <baseline>test25.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test26.js</files>
      <baseline>test26.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test27.js</files>
      <baseline>test27.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test28.js</files>
      <baseline>test28.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test29.js</files>
      <baseline>test29.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test3.js</files>
      <baseline>test3.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test30.js</files>
      <baseline>test30.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test31.js</files>
      <baseline>test31.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test32.js</files>
      <baseline>test32.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test33.js</files>
      <baseline>test33.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test34.js</files>
      <baseline>test34.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test35.js</files>
      <baseline>test35.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test36.js</files>
      <baseline>test36.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test37.js</files>
      <baseline>test37.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test38.js</files>
      <baseline>test38.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test39.js</files>
      <baseline>test39.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test4.js</files>
      <baseline>test4.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test40.js</files>
      <baseline>test40.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test41.js</files>
      <baseline>test41.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test42.js</files>
      <baseline>test42.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test43.js</files>
      <baseline>test43.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test44.js</files>
      <baseline>test44.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test45.js</files>
      <baseline>test45.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test46.js</files>
      <baseline>test46.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test47.js</files>
      <baseline>test47.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test48.js</files>
      <baseline>test48.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test49.js</files>
      <baseline>test49.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test5.js</files>
      <baseline>test5.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test50.js</files>
      <baseline>test50.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test51.js</files>
      <baseline>test51.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test52.js</files>
      <baseline>test52.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test53.js</files>
      <baseline>test53.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test54.js</files>
      <baseline>test54.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test55.js</files>
      <baseline>test55.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test56.js</files>
      <baseline>test56.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test57.js</files>
      <baseline>test57.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test58.js</files>
      <baseline>test58.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test59.js</files>
      <baseline>test59.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test6.js</files>
      <baseline>test6.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test60.js</files>
      <baseline>test60.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test61.js</files>
      <baseline>test61.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test62.js</files>
      <baseline>test62.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test63.js</files>
      <baseline>test63.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test64.js</files>
      <baseline>test64.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test65.js</files>
      <baseline>test65.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test66.js</files>
      <baseline>test66.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test67.js</files>
      <baseline>test67.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test68.js</files>
      <baseline>test68.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test69.js</files>
      <baseline>test69.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test7.js</files>
      <baseline>test7.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test70.js</files>
      <baseline>test70.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test71.js</files>
      <baseline>test71.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test72.js</files>
      <baseline>test72.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test73.js</files>
      <baseline>test73.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test74.js</files>
      <baseline>test74.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test75.js</files>
      <baseline>test75.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test76.js</files>
      <baseline>test76.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test77.js</files>
      <baseline>test77.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test78.js</files>
      <baseline>test78.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test79.js</files>
      <baseline>test79.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test8.js</files>
      <baseline>test8.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test80.js</files>
      <baseline>test80.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test81.js</files>
      <baseline>test81.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test82.js</files>
      <baseline>test82.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test83.js</files>
      <baseline>test83.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test84.js</files>
      <baseline>test84.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test85.js</files>
      <baseline>test85.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test86.js</files>
      <baseline>test86.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test87.js</files>
      <baseline>test87.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test88.js</files>
      <baseline>test88.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test89.js</files>
      <baseline>test89.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test9.js</files>
      <baseline>test9.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test90.js</files>
      <baseline>test90.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test91.js</files>
      <baseline>test91.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test92.js</files>
      <baseline>test92.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test93.js</files>
      <baseline>test93.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test94.js</files>
      <baseline>test94.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test95.js</files>
      <baseline>test95.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test96.js</files>
      <baseline>test96.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test97.js</files>
      <baseline>test97.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test98.js</files>
      <baseline>test98.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test99.js</files>
      <baseline>test99.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test100.js</files>
      <baseline>test100.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test101.js</files>
      <baseline>test101.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>test102.js</files>
      <compile-flags>-minInterpretCount:4 -maxInterpretCount:4 -off:simpleJit</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>test103.js</files>
      <baseline>test103.baseline</baseline>
      <compile-flags>-minInterpretCount:1 -maxInterpretCount:1 -off:simpleJit -off:objTypeSpec</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>test104.js</files>
      <baseline>test104.baseline</baseline>
      <compile-flags>-minInterpretCount:1 -maxInterpretCount:1 -off:simpleJit -force:jitLoopBody</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>test105.js</files>
      <baseline>test105.baseline</baseline>
      <compile-flags>-minInterpretCount:1 -maxInterpretCount:1 -off:simpleJit -off:aggressiveIntTypeSpec</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>test106.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>test107.js</files>
      <compile-flags>-minInterpretCount:1 -maxInterpretCount:1 -off:simpleJit -off:lossyIntTypeSpec -force:jitLoopBody</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>test108.js</files>
      <compile-flags>-minInterpretCount:1 -maxInterpretCount:1 -off:simpleJit</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>test109.js</files>
      <compile-flags>-minInterpretCount:1 -maxInterpretCount:1 -off:simpleJit -off:aggressiveIntTypeSpec -off:lossyIntTypeSpec</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>test110.js</files>
      <compile-flags>-bgJit- -minInterpretCount:1 -maxInterpretCount:1 -off:simpleJit -loopInterpretCount:0 -off:aggressiveIntTypeSpec -off:lossyIntTypeSpec</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>test111.js</files>
      <compile-flags>-minInterpretCount:1 -maxInterpretCount:1 -off:simpleJit -force:rejit -force:deferparse</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>test112.js</files>
      <compile-flags>-minInterpretCount:1 -maxInterpretCount:1 -off:simpleJit -off:typedArrayTypeSpec</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>test113.js</files>
      <compile-flags>-minInterpretCount:1 -maxInterpretCount:1 -off:simpleJit -off:arrayMissingValueCheckHoist</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>test115.js</files>
      <compile-flags>-args bailout -endArgs</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>test116.js</files>
      <compile-flags>-minInterpretCount:1 -maxInterpretCount:1 -off:simpleJit</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>test117.js</files>
      <baseline>test117.baseline</baseline>
      <compile-flags>-minInterpretCount:1 -maxInterpretCount:1 -off:simpleJit -off:eliminateArrayAccessHelperCall</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>test118.js</files>
      <baseline>test118.baseline</baseline>
      <compile-flags>-minInterpretCount:1 -maxInterpretCount:1 -off:simpleJit</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>test119.js</files>
      <baseline>test119.baseline</baseline>
      <compile-flags>-minInterpretCount:1 -maxInterpretCount:1 -off:simpleJit</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>test120.js</files>
      <compile-flags>-minInterpretCount:1 -maxInterpretCount:1 -off:simpleJit</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>test121.js</files>
      <compile-flags>-bgJit- -loopInterpretCount:1</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>test122.js</files>
      <compile-flags>-bgJit- -maxInterpretCount:2 -loopInterpretCount:1</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>test123.js</files>
      <baseline>test123.baseline</baseline>
      <compile-flags>-bgJit- -loopInterpretCount:1</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>test124.js</files>
      <compile-flags>-bgJit- -loopInterpretCount:1 -maxInterpretCount:2 -maxSimpleJitRunCount:0 -forceSerialized</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>test125.js</files>
      <compile-flags>-forceNative -off:fullJit</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>test126.js</files>
      <compile-flags>-bgJit- -fullJitAfter:1</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>test127.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>test128.js</files>
      <baseline>test128.baseline</baseline>
      <compile-flags>-noNative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>test129.js</files>
      <compile-flags>-bgJit- -loopInterpretCount:1</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>test130.js</files>
      <compile-flags>-bgJit- -fullJitAfter:1 -force:deferParse</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>test131.js</files>
      <compile-flags>-bgJit- -fullJitAfter:1 -off:fieldCopyProp</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>test132.js</files>
      <compile-flags>-bgJit- -fullJitAfter:1 -off:eliminateArrayAccessHelperCall</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>test133.js</files>
      <baseline>test133.baseline</baseline>
      <compile-flags>-bgJit- -fullJitAfter:1 -loopInterpretCount:1</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>test134.js</files>
      <baseline>test134.baseline</baseline>
      <compile-flags>-bgJit- -fullJitAfter:1</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>test135.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>test136.js</files>
      <baseline>test136.baseline</baseline>
      <compile-flags>-bgJit- -off:simpleJit -loopInterpretCount:1 -off:nativeArray -off:jsArraySegmentHoist -off:arrayMissingValueCheckHoist</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>test137.js</files>
      <compile-flags>-bgJit- -simpleJitAfter:1 -fullJitAfter:3 -loopInterpretCount:1</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>test138.js</files>
      <compile-flags>-bgJit- -bgJitDelay:0 -loopInterpretCount:50</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>test138.js</files>
      <compile-flags>-bgJit- -bgJitDelay:0</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>test139.js</files>
      <baseline>test139.baseline</baseline>
      <compile-flags>-bgJit- -off:simpleJit -fullJitAfter:2</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>test140.js</files>
      <compile-flags>-bgJit- -off:simpleJit -fullJitAfter:1</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>test141.js</files>
      <compile-flags>-bgJit- -off:simpleJit -fullJitAfter:2 -on:simulatePolyCacheWithOneTypeForFunction:1 -simulatePolyCacheWithOneTypeForInlineCacheIndex:3</compile-flags>
      <tags>exclude_dynapogo,exclude_test</tags>
    </default>
  </test>
  <test>
    <default>
      <files>test142.js</files>
      <compile-flags>-bgJit- -off:simpleJit -fullJitAfter:2</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>test143.js</files>
      <baseline>test143.baseline</baseline>
      <compile-flags>-bgJit- -off:simpleJit -loopInterpretCount:1 -testTrace:arrayCheckHoist</compile-flags>
      <!-- ch.exe doesn't output entire baseline before exiting; -testTrace flush issue? -->
      <tags>exclude_dynapogo,exclude_forceserialized,exclude_nonative,exclude_arm64</tags>
    </default>
  </test>
  <test>
    <default>
      <files>test144.js</files>
      <compile-flags>-bgJit- -off:simpleJit -fullJitAfter:1 -off:arrayCheckHoist</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>test145.js</files>
      <compile-flags>-bgJit- -off:simpleJit -fullJitAfter:1 -force:deferParse</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>deadstore_field.js</files>
      <baseline>deadstore_field.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>deadstore_oneblockloop.js</files>
      <baseline>deadstore_oneblockloop.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>marktemp.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>marktemp2.js</files>
      <baseline>marktemp2.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>marktempnumberontempobjects.js</files>
      <baseline>marktempnumberontempobjects.baseline</baseline>
      <compile-flags>-fja:2 -off:simplejit</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>mul.js</files>
      <baseline />
    </default>
  </test>
  <test>
    <default>
      <files>NegativeZero.js</files>
      <baseline>NegativeZero.baseline</baseline>
      <tags>Slow</tags>
    </default>
  </test>
  <test>
    <default>
      <files>Overflow.js</files>
      <baseline>Overflow.baseline</baseline>
      <tags>Slow</tags>
    </default>
  </test>
  <test>
    <default>
      <files>Overflow_MaxInterpret.js</files>
      <baseline>Overflow_MaxInterpret.baseline</baseline>
      <compile-flags>-minInterpretCount:1 -maxInterpretCount:1 -off:simpleJit</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>Invariants.js</files>
      <baseline>Invariants.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>LossyLosslessInt32.js</files>
      <baseline>LossyLosslessInt32.baseline</baseline>
      <compile-flags>-off:aggressiveIntTypeSpec</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>LossyLosslessInt32.js</files>
      <baseline>LossyLosslessInt32.baseline</baseline>
    </default>
  </test>
    <test>
    <default>
      <files>LossyLosslessInt32.js</files>
      <compile-flags>-off:simplejit</compile-flags>
      <baseline>LossyLosslessInt32.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>AggressiveIntTypeSpec.js</files>
      <baseline>AggressiveIntTypeSpec.baseline</baseline>
      <compile-flags>-off:inline</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>AggressiveIntTypeSpec_Off_MaxInterpret.js</files>
      <baseline>AggressiveIntTypeSpec_Off_MaxInterpret.baseline</baseline>
      <compile-flags>-minInterpretCount:1 -maxInterpretCount:1 -off:simpleJit -off:aggressiveIntTypeSpec</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>FloatTypeSpec_MaxInterpret.js</files>
      <baseline>FloatTypeSpec_MaxInterpret.baseline</baseline>
      <compile-flags>-minInterpretCount:1 -maxInterpretCount:1 -off:simpleJit -off:copyProp -off:inline</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>NativeArray_MaxInterpret_OffArrayMissingValueCheckHoist.js</files>
      <baseline>NativeArray_MaxInterpret_OffArrayMissingValueCheckHoist.baseline</baseline>
      <compile-flags>-minInterpretCount:1 -maxInterpretCount:1 -off:simpleJit -off:arrayMissingValueCheckHoist</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>TypeSpec.js</files>
      <baseline>TypeSpec.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>inline-actual.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>copyprop.js</files>
      <baseline>copyprop.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>copyprop.js</files>
      <compile-flags>-maxinterpretcount:1 -off:simpleJit</compile-flags>
      <baseline>copyprop.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>dead.js</files>
      <compile-flags>-force:inlinecandidate</compile-flags>
      <baseline>dead.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>UnreachableCode.js</files>
      <baseline>UnreachableCode.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>PrePassValues.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>PrePassEntanglement.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>missing_len.js</files>
      <baseline>missing_len.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>ArrayCheckHoist.js</files>
      <baseline>ArrayCheckHoist_NoBailout.baseline</baseline>
      <compile-flags>-noNative -dynamicprofilecache:profile.dpl.ArrayCheckHoist.js</compile-flags>
      <tags>exclude_dynapogo,exclude_serialized,Slow</tags>
      <timeout>300</timeout>
    </default>
  </test>
  <test>
    <default>
      <files>ArrayCheckHoist.js</files>
      <baseline>ArrayCheckHoist_Bailout.baseline</baseline>
      <compile-flags>-off:arrayCheckHoist -args bailout -endArgs -dynamicprofileinput:profile.dpl.ArrayCheckHoist.js</compile-flags>
      <tags>exclude_interpreted,exclude_serialized,Slow</tags>
      <timeout>300</timeout>
    </default>
  </test>
  <test>
    <default>
      <files>ArrayCheckHoist.js</files>
      <baseline>ArrayCheckHoist_Bailout.baseline</baseline>
      <compile-flags>-args bailout -endArgs -off:fieldCopyProp -off:objTypeSpec -dynamicprofileinput:profile.dpl.ArrayCheckHoist.js</compile-flags>
      <tags>exclude_interpreted,exclude_serialized,Slow</tags>
      <timeout>300</timeout>
    </default>
  </test>
  <test>
    <default>
      <files>ArrayCheckHoist.js</files>
      <baseline>ArrayCheckHoist_Bailout.baseline</baseline>
      <compile-flags>-args bailout -endArgs -dynamicprofileinput:profile.dpl.ArrayCheckHoist.js</compile-flags>
      <tags>exclude_interpreted,exclude_serialized,Slow</tags>
      <timeout>300</timeout>
    </default>
  </test>
  <test>
    <default>
      <files>BoundCheckElimination.js</files>
      <baseline>BoundCheckElimination.baseline</baseline>
      <compile-flags>-bgJit- -minInterpretCount:1 -maxInterpretCount:1 -off:simpleJit -off:bailOnNoProfile -testTrace:boundCheckElimination -testTrace:boundCheckHoist</compile-flags>
      <tags>exclude_dynapogo,exclude_serialized,exclude_nonative,exclude_arm64</tags>
    </default>
  </test>
  <test>
    <default>
      <files>boundCheckHoistBug.js</files>
      <compile-flags>-mic:1 -off:simplejit</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>Miscellaneous_MaxInterpret.js</files>
      <baseline>Miscellaneous_MaxInterpret.baseline</baseline>
      <compile-flags>-bgJit- -minInterpretCount:1 -maxInterpretCount:1 -off:simpleJit</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>Miscellaneous_LoopInterpret.js</files>
      <baseline>Miscellaneous_LoopInterpret.baseline</baseline>
      <compile-flags>-bgJit- -loopInterpretCount:1</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>Miscellaneous_ForceJitLoopBody.js</files>
      <compile-flags>-bgJit- -force:jitLoopBody</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>NegativeZeroPow.js</files>
      <baseline>NegativeZeroPow.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>StrengthReduction.js</files>
      <baseline>StrengthReduction.baseline</baseline>
      <compile-flags>-force:MulStrengthReduction -maxinterpretcount:1 -off:simpleJit -bgjit-</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>directglofield_dictionarytypehandler.js</files>
      <baseline>directglofield_dictionarytypehandler.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>IntDivTypeSpec.js</files>
      <baseline>IntDivTypeSpec.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>bailonnoprofile_objtypespecstore.js</files>
      <compile-flags>-recyclerverify:run -off:simplejit -maxinterpretcount:2</compile-flags>
      <tags>exclude_test,exclude_dynapogo</tags>
      <baseline />
    </default>
  </test>
  <test>
    <default>
      <files>Non32bitOverflow.js</files>
      <baseline>Non32bitOverflow.baseline</baseline>
      <compile-flags>-maxinterpretcount:1 -off:simpleJit -bgjit-</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>implicit_upwardexposed.js</files>
      <baseline>implicit_upwardexposed.baseline</baseline>
      <compile-flags>-maxinterpretcount:1 -off:simplejit</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>bug1288834.js</files>
      <baseline>bug1288834.baseline</baseline>
      <compile-flags>-maxinterpretcount:1 -off:simplejit -off:peeps</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>opttagchecks1.js</files>
      <baseline>opttagchecks1.baseline</baseline>
      <compile-flags>-loopinterpretcount:1</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>opttagchecks2.js</files>
      <compile-flags>-off:bailonnoprofile</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>trycatch_functional.js</files>
      <baseline>trycatch_functional.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>trycatch_assert.js</files>
      <baseline>trycatch_assert.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>ToVarI32_x64.js</files>
      <compile-flags>-force:rejit -off:ArrayCheckHoist -off:aggressiveinttypespec -off:bailonnoprofile -off:nativearray</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>forcedTypeSpecOnLoopHeader.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>hasown.js</files>
      <baseline>hasown.baseline</baseline>
      <compile-flags>-mic:2 -off:simplejit -bgjit-</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>nonequivpoly.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>propstrbug.js</files>
      <compile-flags>-lic:1 -bgjit- -msjrc:2 -mic:1</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>memop-upperbound.js</files>
      <baseline>memop-upperbound.baseline</baseline>
      <compile-flags>-lic:1 -off:nativearray</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>forceRejitBugs.js</files>
      <compile-flags>-mic:1 -off:simplejit -force:rejit</compile-flags>
      <baseline>forceRejitBugs.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>negativeZero_bugs.js</files>
      <compile-flags>-mic:2 -off:simplejit</compile-flags>
      <baseline>negativeZero_bugs.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>shladdpeep.js</files>
      <compile-flags>-mic:1 -off:simplejit</compile-flags>
      <baseline>shladdpeep.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>FixTypeAfterHoisting.js</files>
      <compile-flags>-lic:1 -off:simplejit -off:aggressiveinttypespec -bgjit-</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>HoistStringConcat.js</files>
      <compile-flags>-lic:1 -off:simplejit -bgjit-</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>HoistCheckObjType.js</files>
      <baseline>HoistCheckObjType.baseline</baseline>
      <compile-flags>-maxinterpretcount:1 -maxsimplejitruncount:1</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>invalidIVRangeBug.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>bug14661401.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>fgpeepbug.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>capturedValuesBugs.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>test146.js</files>
      <compile-flags>-off:bailonnoprofile -off:earlyreferenceerrors</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>test147.js</files>
      <compile-flags>-off:aggressiveinttypespec</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>test148.js</files>
      <compile-flags>-mic:1 -off:simplejit</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>test149.js</files>
      <compile-flags>-mic:1 -off:simplejit -bgjit- -force:fixdataprops -lic:1</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>test150.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>test151.js</files>
      <compile-flags>-off:usefixeddataprops -off:objtypespec</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>test152.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>IsIn_ArrayNoMissingValues.js</files>
      <baseline>IsIn_ArrayNoMissingValues.baseline</baseline>
      <compile-flags>-testtrace:BoundCheckElimination</compile-flags>
      <tags>exclude_dynapogo,exclude_serialized,exclude_nonative</tags>
    </default>
  </test>
  <test>
    <default>
      <files>noedgebug.js</files>
      <compile-flags>-maxinterpretcount:1 -maxsimplejitruncount:1 -oopjit- -off:bailonnoprofile -loopinterpretcount:0 -OOPJITMissingOpts- </compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>mul_rejit_bug.js</files>
      <baseline>mul_rejit_bug.baseline</baseline>
      <compile-flags>-mic:1 -oopjit- -bgJit- -off:simplejit -trace:rejit</compile-flags>
      <tags>exclude_dynapogo,exclude_nonative,exclude_serialized</tags>
    </default>
  </test>
  <test>
    <default>
      <files>testsimplepathbrfold.js</files>
      <compile-flags>-maxinterpretcount:1 -maxsimplejitruncount:1 -oopjit- -trace:pathdepbranchfolding -bgjit-</compile-flags>
      <baseline>testsimplepathbrfold.baseline</baseline>
      <tags>exclude_dynapogo,exclude_nonative</tags>
    </default>
  </test>
  <test>
    <default>
      <files>bugsimplepathbrfold.js</files>
      <compile-flags>-maxinterpretcount:1 -maxsimplejitruncount:1 -oopjit-</compile-flags>
      <baseline>bugsimplepathbrfold.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>bugsimplepathbrfold1.js</files>
      <compile-flags>-maxinterpretcount:1 -maxsimplejitruncount:1 -oopjit-</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>bugsimplepathbrfold3.js</files>
      <compile-flags>-maxsimplejitruncount:1 -maxinterpretcount:1 -forcejitloopbody -oopjit-</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>bugsimplepathbrfold4.js</files>
      <compile-flags> -loopinterpretcount:1 -bgjit- -maxsimplejitruncount:1 -maxinterpretcount:1 -oopjit-</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>bugsimplepathbrfold5.js</files>
      <tags>exclude_dynapogo,exclude_nonative</tags>
    </default>
  </test>
  <test>
    <default>
      <files>bugsimplepathbrfoldgetter.js</files>
      <baseline>bugsimplepathbrfoldgetter.baseline</baseline>
      <tags>exclude_dynapogo,exclude_nonative</tags>
    </default>
  </test>
  <test>
    <default>
      <files>bugconstfoldundefined.js</files>
      <baseline>bugconstfoldundefined.baseline</baseline>
      <compile-flags>-maxinterpretcount:6 -maxsimplejitruncount:4 -werexceptionsupport -oopjit-  -mic:1 -off:simplejit -forcejitloopbody</compile-flags>
      <tags>exclude_dynapogo,exclude_nonative</tags>
    </default>
  </test>
  <test>
    <default>
      <files>bcebug.js</files>
      <compile-flags>-mic:1 -off:simplejit -bgjit- -lic:1</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>rembug.js</files>
      <compile-flags>-maxinterpretcount:1 -maxsimplejitruncount:1  -loopinterpretcount:1 -oopjit- -bgjit-</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>pathdepbug.js</files>
      <compile-flags>-maxinterpretcount:1 -maxsimplejitruncount:1  -on:CaptureByteCodeRegUse  -off:aggressiveinttypespec</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>lengthsymstorebug.js</files>
      <compile-flags>-mic:1 -off:simplejit</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>valuetypegap.js</files>
      <compile-flags>-maxinterpretcount:1 -maxsimplejitruncount:1 -force:inline</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>aux_slot_type_transition.js</files>
      <compile-flags>-maxinterpretcount:1 -maxsimplejitruncount:1</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>argrestoreintry.js</files>
      <compile-flags>-maxinterpretcount:1 -maxsimplejitruncount:1</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>aux_slot_type_transition_2.js</files>
      <compile-flags>-maxinterpretcount:1 -maxsimplejitruncount:1</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_gh6325.js</files>
      <compile-flags>-off:backend -forcejitloopbody</compile-flags>
      <tags>exclude_nonative</tags>
    </default>
  </test>
  <test>
    <default>
      <files>StackArgumentsOptNegativeIndex.js</files>
    </default>
  </test>
</regress-exe>
