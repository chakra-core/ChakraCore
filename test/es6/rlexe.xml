<?xml version="1.0" encoding="utf-8"?>
<regress-exe>
  <test>
    <default>
      <files>instanceOfProto.js</files>
      <compile-flags>-args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_issue_2747.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>lambda1.js</files>
      <compile-flags>-off:deferparse -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>lambda-expr.js</files>
      <baseline>lambda-expr.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>lambda1.js</files>
      <compile-flags>-force:deferparse -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>lambda-params-shadow.js</files>
      <compile-flags>-off:deferparse -es7asyncawait</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>lambda-params-shadow.js</files>
      <compile-flags>-force:deferparse -es7asyncawait</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>NumericLiteralTest.js</files>
      <compile-flags>-args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>boundBug3837520.js</files>
      <compile-flags>-es6generators -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>es6toLength.js</files>
      <compile-flags>-es6toLength -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>es6toLength.js</files>
      <compile-flags>-es6toLength -JsBuiltIn- -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>toPrimitiveCrossScriptTestCase.js</files>
      <compile-flags></compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>computedPropertyToString.js</files>
      <compile-flags>-args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>computedPropertySideEffect.js</files>
      <compile-flags>-force:deferparse</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>BugFix2214646.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>es6IsConcatSpreadable.js</files>
      <compile-flags>-es6tolength -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>toPrimitive.js</files>
      <compile-flags>-es6regexsymbols -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>unscopablesWithScopeTest.js</files>
      <compile-flags>-args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>function.name.js</files>
      <compile-flags>-ES6Generators -es6functionnamefull -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>function.name.js</files>
      <compile-flags>-ES6Generators -es6functionnamefull -force:deferparse -args summary -endargs</compile-flags>
      <timeout>120</timeout> <!-- ARM64 take more than 60 -->
    </default>
  </test>
  <test>
    <default>
      <files>superDotOSBug3930962.js</files>
      <compile-flags>-args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>toStringTag.js</files>
      <compile-flags>-args summary -endargs</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>generator-jit-bugs.js</files>
      <compile-flags>-JitES6Generators -args summary -endargs</compile-flags>
      <tags>exclude_nonative</tags>
    </default>
  </test>
  <test>
    <default>
      <files>generator-jit-bugs.js</files>
      <compile-flags>-JitES6Generators -off:simplejit -args summary -endargs</compile-flags>
      <tags>exclude_nonative</tags>
    </default>
  </test>
  <test>
    <default>
      <files>generator-jit-bugs.js</files>
      <compile-flags>-JitES6Generators -off:fulljit -args summary -endargs</compile-flags>
      <tags>exclude_nonative, exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>async-jit-bugs.js</files>
      <compile-flags>-JitES6Generators -args summary -endargs</compile-flags>
      <tags>exclude_nonative</tags>
    </default>
  </test>
  <test>
    <default>
      <files>async-jit-bugs.js</files>
      <compile-flags>-JitES6Generators -off:simplejit -args summary -endargs</compile-flags>
      <tags>exclude_nonative</tags>
    </default>
  </test>
  <test>
    <default>
      <files>async-jit-bugs.js</files>
      <compile-flags>-JitES6Generators -off:fulljit -args summary -endargs</compile-flags>
      <tags>exclude_nonative, exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>proto_basic.js</files>
      <baseline>proto_basic.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>proto_disable.js</files>
      <baseline>proto_disable.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>proto_initializer.js</files>
      <baseline>proto_initializer.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>proto_initializer.js</files>
      <baseline>proto_initializer.baseline</baseline>
      <compile-flags>-ForceSerialized</compile-flags>
      <tags>exclude_serialized</tags>
    </default>
  </test>
  <test>
    <default>
      <files>proto_addprop.js</files>
      <compile-flags>-maxinterpretcount:1 -off:simpleJit</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>proto_addprop.js</files>
      <compile-flags>-maxinterpretcount:2 -off:simpleJit</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>map_basic.js</files>
      <compile-flags>-args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>map_functionality.js</files>
      <compile-flags>-ES6ObjectLiterals -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>set_basic.js</files>
      <compile-flags>-args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>set_functionality.js</files>
      <compile-flags>-ES6ObjectLiterals -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>weakmap_basic.js</files>
      <compile-flags>-args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>weakmap_functionality.js</files>
      <compile-flags>-ES6ObjectLiterals -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>weakset_basic.js</files>
      <compile-flags> -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>weakset_functionality.js</files>
      <compile-flags>-ES6ObjectLiterals -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>blockscope-activationobject.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>blockscope-deferred.js</files>
      <baseline>blockscope-deferred.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>blockscope-deferred.js</files>
      <compile-flags>-force:deferparse</compile-flags>
      <baseline>blockscope-deferred.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>blockscope-functionbinding.js</files>
      <baseline>blockscope-functionbinding.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>blockscope-functionbinding.js</files>
      <compile-flags>-force:deferparse</compile-flags>
      <baseline>blockscope-functionbinding.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>blockscope-functionbinding.js</files>
      <compile-flags>-lic:1 -InitializeInterpreterSlotsWithInvalidStackVar</compile-flags>
      <baseline>blockscope-functionbinding.baseline</baseline>
      <tags>exclude_test</tags>
    </default>
  </test>
  <test>
    <default>
      <files>letconst_global.js</files>
      <baseline>letconst_global.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>letconst_global_shadowing.js</files>
      <baseline>letconst_global_shadowing.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>letconst_global_shadow_builtins.js</files>
      <baseline>letconst_global_shadow_builtins.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>letconst_global_shadow_builtins_nonconfigurable.js</files>
      <baseline>letconst_global_shadow_builtins_nonconfigurable.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>letconst_global_shadow_deleted.js</files>
      <baseline>letconst_global_shadow_deleted.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>letconst_global_shadow_accessor.js</files>
      <baseline>letconst_global_shadow_accessor.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>letconst_global_bug.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>letconst_eval_redecl.js</files>
      <baseline>letconst_eval_redecl.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>letconst_eval_redecl.js</files>
      <baseline>letconst_eval_redecl.strictmode.baseline</baseline>
      <compile-flags>-forcestrictmode</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>definegettersetter.js</files>
      <baseline>definegettersetter.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>classes.js</files>
      <compile-flags>-Off:Deferparse -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>classes.js</files>
      <compile-flags>-Force:Deferparse -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>classes_bugfixes.js</files>
      <compile-flags>-Off:Deferparse -args summary -endargs</compile-flags>
      <tags>exclude_noicu</tags>
    </default>
  </test>
  <test>
    <default>
      <files>classes_bugfixes.js</files>
      <compile-flags>-Force:Deferparse -args summary -endargs</compile-flags>
      <tags>exclude_noicu</tags>
    </default>
  </test>
  <test>
    <default>
      <files>ES6Super.js</files>
      <compile-flags>-nonative -off:dynamicprofile -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>ES6Super.js</files>
      <compile-flags>-Off:Deferparse -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>ES6Super.js</files>
      <compile-flags>-Force:Deferparse -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>classes_bug_OS_6471427.js</files>
      <compile-flags>-ForceSerialized</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>classes_bug_OS_6471427.js</files>
      <compile-flags></compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>classes_bug_OS_7100885.js</files>
      <compile-flags>-maxsimplejitruncount:4 -maxinterpretcount:4</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>ES6SubclassableBuiltins.js</files>
      <compile-flags>-ES6Spread -ES6Generators -ESSharedArrayBuffer -Off:Deferparse -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>ES6SubclassableBuiltins.js</files>
      <compile-flags>-ES6Spread -ES6Generators -ESSharedArrayBuffer -Force:Deferparse -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>ES6SubclassableAsync.js</files>
      <compile-flags>-ES6Spread -ES6Generators -Off:Deferparse</compile-flags>
      <baseline>ES6SubclassableAsync.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>ES6SubclassableAsync.js</files>
      <compile-flags>-ES6Spread -ES6Generators -Force:Deferparse</compile-flags>
      <baseline>ES6SubclassableAsync.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>ES6MathAPIs.js</files>
      <compile-flags> -ES6Math -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>ES6MathAPIs.js</files>
      <compile-flags> -ES6 -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>ES6NumberAPIs.js</files>
      <compile-flags> -ES6Number -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>ES6StringAPIs.js</files>
      <compile-flags>-ES6String -ES6RegExSymbols -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>codePointAt.js</files>
      <baseline>codePointAt.baseline</baseline>
      <compile-flags> -ES6Unicode</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>stringtemplate_basic.js</files>
      <baseline>stringtemplate_basic.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>ES6StringTemplate.js</files>
      <compile-flags>-args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>ES6StringTemplateSlow.js</files>
      <compile-flags>-args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>ES6TypedArrayExtensions.js</files>
      <compile-flags>-CollectGarbage -ES6ObjectLiterals -ESSharedArrayBuffer -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>ES6ArrayAPI.js</files>
      <compile-flags>-ES6ObjectLiterals -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>ES6ArrayUseConstructor.js</files>
      <compile-flags>-args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>ES6ArrayUseConstructor_v5.js</files>
      <compile-flags>-args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>ES6Symbol.js</files>
      <compile-flags>-CollectGarbage -ES6ObjectLiterals -ES6RegExSymbols -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>ES6Symbol_540238.js</files>
      <compile-flags>-RecyclerStress</compile-flags>
      <tags>exclude_test</tags>
    </default>
  </test>
  <test>
    <default>
      <files>ES6Promise.js</files>
      <compile-flags> -ES6 -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>ES6PromiseAsync.js</files>
      <baseline>ES6PromiseAsync.baseline</baseline>
      <compile-flags> -ES6</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>normalize.js</files>
      <baseline>normalize.baseline</baseline>
      <tags>exclude_noicu</tags>
      <compile-flags> -ES6Unicode</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>normalizeProp.js</files>
      <baseline>normalizeProp.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>unicode_escape_sequences.js</files>
      <baseline>unicode_escape_sequences.baseline</baseline>
      <compile-flags> -ES6Unicode -ES6RegExSticky</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>unicode_6_identifiers_utf8.js</files>
      <baseline>unicode_6_identifiers_utf8.baseline</baseline>
      <compile-flags> -ES6Unicode</compile-flags>
      <tags>exclude_win7,exclude_noicu</tags>
    </default>
  </test>
  <test>
    <default>
      <files>unicode_regex_surrogate_atoms.js</files>
      <baseline>unicode_regex_surrogate_atoms.baseline</baseline>
      <compile-flags> -ES6Unicode -ES6RegExSticky</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spreadIterator.js</files>
      <compile-flags>-args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>reflectConstructConsumeNewTarget.js</files>
      <compile-flags>-args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>ReflectApiTests.js</files>
      <compile-flags>-args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>proxyTrapConsumeNewTarget.js</files>
      <compile-flags>-args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>boundConstruction.js</files>
      <compile-flags>-args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>CrossContextSpreadfunctionCall.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>CrossContextPromiseFile1.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>CrossContextPromise.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>spread.js</files>
      <compile-flags>-ES6Spread -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>unicode_convertUTF8.js</files>
      <compile-flags> -ES6Unicode</compile-flags>
      <tags>Slow</tags>
    </default>
  </test>
  <test>
    <default>
      <files>Bug517864.js</files>
      <compile-flags>-force:deferparse -ES6Unicode</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>bug620694.js</files>
      <compile-flags>-es6all -recyclerstress</compile-flags>
      <tags>exclude_test,Slow</tags>
    </default>
  </test>
  <test>
    <default>
      <files>unicode_6_identifier_Blue511452.js</files>
      <baseline>unicode_6_identifier_Blue511452.baseline</baseline>
      <compile-flags> -ES6Unicode</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>unicode_idDeferParseFunctions_utf8.js</files>
      <compile-flags>-ES6Unicode</compile-flags>
      <tags>exclude_noicu</tags>
    </default>
  </test>
  <test>
    <default>
      <files>unicode_6_identifier_Blue524737.js</files>
      <baseline>unicode_6_identifier_Blue524737.baseline</baseline>
      <compile-flags> -ES6Unicode</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>supersyntax02.js</files>
      <baseline>supersyntax02.baseline</baseline>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>supersyntax05.js</files>
      <baseline>supersyntax05.baseline</baseline>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>supersyntax06.js</files>
      <baseline>supersyntax06.baseline</baseline>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>objlit.js</files>
      <compile-flags> -ES6 -ES6ObjectLiterals -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>unicode_regex_surrogate_utf8.js</files>
      <baseline>unicode_regex_surrogate_utf8.baseline</baseline>
      <compile-flags> -ES6Unicode -ES6RegExSticky</compile-flags>
      <tags>Slow</tags>
      <timeout>300</timeout>
    </default>
  </test>
  <test>
    <default>
      <files>unicode_blue_533163_utf8.js</files>
      <baseline>unicode_blue_533163_utf8.baseline</baseline>
      <compile-flags> -ES6Unicode</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>ES6Iterators-forof.js</files>
      <compile-flags>-ES6 -Intl- -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>ES6Iterators-apis.js</files>
      <compile-flags>-ES6 -Intl- -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>ES6Species-apis.js</files>
      <compile-flags>-ES6 -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>ES6Species-bugs.js</files>
      <compile-flags>-CollectGarbage -ES6 -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>blue595539.js</files>
      <compile-flags> -ES6Unicode</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>proxytest6.js</files>
      <compile-flags>-args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>ProxyPropertiesAPI.js</files>
      <compile-flags>-args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>proxybugs.js</files>
      <compile-flags>-args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>proxyconstruction.js</files>
      <compile-flags>-args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>proxybug3.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>proxyprotobug.js</files>
      <baseline>proxyprotobug.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>proxybug.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>ProxyCall.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>proxyenumremoval.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>proxy-issue884.js</files>
      <baseline>proxy-issue884.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>nullPropertyDescriptor.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>object-is.js</files>
      <compile-flags>-args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>object-assign.js</files>
      <compile-flags>-args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>default.js</files>
      <compile-flags>-force:deferparse -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>default.js</files>
      <compile-flags>-off:deferparse -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>default.js</files>
      <compile-flags>-force:CachedScope -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>default-splitscope.js</files>
      <compile-flags>-off:deferparse -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>default-splitscope.js</files>
      <compile-flags>-force:deferparse -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>default-splitscope-undodeferparse.js</files>
      <compile-flags>-forceundodefer</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>default-splitscope-serialized.js</files>
      <compile-flags>-forceserialized</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>rest.js</files>
      <compile-flags>-ES6Rest -ES6ObjectLiterals -ES6Spread -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>rest.js</files>
      <compile-flags>-ES6Rest -ES6ObjectLiterals -ES6Spread -force:deferparse -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>generators-syntax.js</files>
      <compile-flags>-ES6Generators -args summary -endargs</compile-flags>
      <tags>exclude_arm</tags>
    </default>
  </test>
  <test>
    <default>
      <files>generators-syntax.js</files>
      <compile-flags>-ES6Generators -force:deferparse -args summary -endargs</compile-flags>
      <tags>exclude_arm</tags>
    </default>
  </test>
  <test>
    <default>
      <files>forInEdgeCases.js</files>
      <compile-flags>-args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>generators-deferparse.js</files>
      <compile-flags>-force:deferparse -ES6Generators</compile-flags>
      <tags>exclude_arm</tags>
    </default>
  </test>
  <test>
    <default>
      <files>generators-apis.js</files>
      <compile-flags>-ES6Generators -args summary -endargs</compile-flags>
      <tags>exclude_arm</tags>
    </default>
  </test>
  <test>
    <default>
      <files>generators-functionality.js</files>
      <!-- <compile-flags>-ES6Generators -JitES6Generators -args summary -endargs</compile-flags> -->
      <compile-flags>-ES6Generators -args summary -endargs</compile-flags>
      <tags>exclude_arm</tags>
    </default>
  </test>
  <test>
    <default>
      <files>generators-deferred.js</files>
      <compile-flags>-ES6Generators -force:deferparse</compile-flags>
      <tags>exclude_arm</tags>
    </default>
  </test>
  <test>
    <default>
      <files>generators-deferred.js</files>
      <compile-flags>-ES6Generators -serialized</compile-flags>
      <tags>exclude_arm,exclude_forceserialized</tags>
    </default>
  </test>
  <test>
    <default>
      <files>generators-undodefer.js</files>
      <compile-flags>-ES6Generators -force:deferparse -forceundodefer</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>generators-cachedscope.js</files>
      <compile-flags>-ES6Generators</compile-flags>
      <tags>exclude_arm</tags>
    </default>
  </test>
  <test>
    <default>
      <files>generators-applyargs.js</files>
      <!-- -off:inlineapply triggers the use of the ApplyArgs bytecode -->
      <compile-flags>-ES6Generators -off:inlineapply</compile-flags>
      <tags>exclude_arm</tags>
    </default>
  </test>
  <test>
    <default>
      <files>generators-applyargs.js</files>
      <compile-flags>-ES6Generators</compile-flags>
      <tags>exclude_arm</tags>
    </default>
  </test>
  <test>
    <default>
      <files>destructuring.js</files>
      <compile-flags>-ES6Rest -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>destructuring_obj.js</files>
      <compile-flags>-ES6Rest -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>destructuring_params.js</files>
      <compile-flags>-ES6Rest -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>destructuring_params.js</files>
      <compile-flags>-force:deferparse -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>destructuring_params_arguments_override.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>destructuring_catch.js</files>
      <compile-flags>-args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>destructuring_bugs.js</files>
      <compile-flags>-ForceDeferParse -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_279376.js</files>
      <compile-flags>-es6spread</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>blue_641922.js</files>
      <baseline>blue_641922.baseline</baseline>
      <compile-flags> -ES6Rest -RecyclerNoPageReuse -PageHeap:2</compile-flags>
      <tags>exclude_test</tags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_981217.js</files>
      <baseline>bug_981217.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>objlit-shorthand-error.js</files>
      <baseline>objlit-shorthand-error.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>generator-strict-error.js</files>
      <baseline>generator-strict-error.baseline</baseline>
      <compile-flags>-ES6Generators -force:deferparse</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>regex-annex-b.js</files>
      <compile-flags>-args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>regex-case-folding.js</files>
      <compile-flags>-version:6 -ES6RegExSticky -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>regex-octoquad.js</files>
      <compile-flags>-RegexOptimize -args summary -endargs</compile-flags>
      <tags>exclude_test</tags>
    </default>
  </test>
  <test>
    <default>
      <files>regex-quantifiers.js</files>
      <compile-flags>-args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>regex-code-point.js</files>
      <compile-flags>-ES6RegExSticky -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>regex-unicode.js</files>
      <compile-flags>-args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>regex-unicode-CaseInsensitive.js</files>
    </default>
  </test>
  <!--
    The following two tests take close to 60 seconds in interpreted mode on OS X test machines,
    so increase the timeout and mark the test as Slow, since there is no need to include this test in non-Slow:
    all of the important cases are covered in regex-unicode-CaseInsensitive.js
  -->
  <test>
    <default>
      <files>regex-unicode-CaseInsensitive-all-i.js</files>
      <tags>Slow</tags>
      <timeout>300</timeout>
    </default>
  </test>
  <test>
    <default>
      <files>regex-unicode-CaseInsensitive-all-iu.js</files>
      <tags>Slow</tags>
      <timeout>300</timeout>
    </default>
  </test>
  <test>
    <default>
      <files>regex-set.js</files>
      <compile-flags>-args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>regex-prototype-properties.js</files>
      <compile-flags>-ES6RegExPrototypeProperties -ES6PrototypeChain -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>regex-symbols.js</files>
      <compile-flags>-ES6RegExSymbols -ES6RegExPrototypeProperties -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>regex-w-sharp-s-kelvin-sign.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>regexflags.js</files>
      <compile-flags>-version:6 -ES6RegExSticky -ES6Unicode -ES6RegExPrototypeProperties -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>regexflags-disabled-features.js</files>
      <compile-flags>-ES2018RegExDotAll- -ES6RegExSticky- -ES6Unicode- -ES6RegExPrototypeProperties -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>RegExpApisTestWithStickyFlag.js</files>
      <compile-flags>-version:6 -ES6RegExSticky -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>stickyflag.js</files>
      <baseline>stickyflag.baseline</baseline>
      <compile-flags>-version:6 -ES6RegExSticky -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>utfbug.js</files>
      <baseline />
      <compile-flags>-dump:bytecode</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>proxybugWithLdFld.js</files>
      <compile-flags>-maxsimplejitruncount:2 -maxinterpretcount:1 -forcejitloopbody -off:bailonnoprofile</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>proxybugWithproto.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>ProxyInProxy.js</files>
      <baseline>ProxyInProxy.baseline</baseline>
      <compile-flags> -mic:1 -off:simpleJIT </compile-flags>
      <tags>exclude_test</tags>
    </default>
  </test>
  <test>
    <default>
      <files>ProxySetPrototypeOf.js</files>
      <compile-flags>-args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>arraywithproxy.js</files>
      <baseline>arraywithproxy.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>proxytest8.js</files>
      <baseline>proxytest8.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>proxytest9.js</files>
      <baseline>proxytest9.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>ES6Function_bugs.js</files>
      <tags>exclude_nonrazzle</tags>
      <compile-flags>-ES6 -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>OS_2700778.js</files>
      <compile-flags>-loopinterpretcount:1 -bgjit- -maxinterpretcount:3 -off:simplejit</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_OS_2184795.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>unicode_whitespace.js</files>
      <compile-flags>-ES6 -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_OS_2553885.js</files>
      <tags>exclude_win7,Intl,exclude_noicu</tags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_OS_2915477.js</files>
    </default>
  </test>

  <test>
    <default>
      <files>bug_os3198161.js</files>
      <compile-flags>-es6all</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_OS_4498031.js</files>
      <compile-flags>-MaxinterpretCount:1 -MaxSimpleJITRunCount:1 -args summary -endargs</compile-flags>
    </default>
  </test>

  <test>
    <default>
      <files>ES6NewTarget.js</files>
      <compile-flags>-args summary -endargs -es6generators</compile-flags>
    </default>
  </test>

  <test>
    <default>
      <files>ES6NewTarget_bugfixes.js</files>
      <compile-flags>-Off:Deferparse -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>ES6NewTarget_bugfixes.js</files>
      <compile-flags>-Force:Deferparse -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>ES6NewTarget_bugfixes.js</files>
      <compile-flags>-forceundodefer -args summary -endargs</compile-flags>
    </default>
  </test>

  <test>
    <default>
      <files>ES6Class_SuperChain.js</files>
      <compile-flags>-args summary -endargs -es6generators</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>globalLambdaNewTargetSyntaxError.js</files>
      <baseline>globalLambdaNewTargetSyntaxError.baseline</baseline>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>globalNewTargetSyntaxError.js</files>
      <baseline>globalNewTargetSyntaxError.baseline</baseline>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>globalCatchNewTargetSyntaxError.js</files>
      <baseline>globalCatchNewTargetSyntaxError.baseline</baseline>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>globalParamCatchNewTargetSyntaxError.js</files>
      <baseline>globalParamCatchNewTargetSyntaxError.baseline</baseline>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>ES6Class_BaseClassConstruction.js</files>
      <compile-flags>-args summary -endargs -es6generators</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>expo.js</files>
      <compile-flags>-args summary -endargs -es7exponentiationoperator</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>trailingcomma.js</files>
      <compile-flags>-args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>es6HasInstance.js</files>
      <compile-flags>-args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>ES6RestrictedProperties.js</files>
      <compile-flags>-args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>ES6Proto.js</files>
      <compile-flags>-args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>object_literal_bug.js</files>
      <compile-flags>-args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>OS_5403724.js</files>
      <tags>exclude_dynapogo</tags>
      <compile-flags>-maxinterpretcount:3 -off:simpleJit -ES6 -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>forloops-per-iteration-bindings.js</files>
      <compile-flags>-args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>HTMLComments.js</files>
      <baseline>HTMLComments.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>await-futreserved-only-in-modules.js</files>
      <compile-flags>-MuteHostErrorMsg -ES6Module</compile-flags>
      <tags>exclude_dynapogo,exclude_xplat</tags>
    </default>
  </test>
  <test>
    <default>
      <files>OS_5500719.js</files>
      <compile-flags>-forceserialized</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>OS_8600339.js</files>
      <compile-flags>-forceserialized</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>iteratorclose.js</files>
      <compile-flags>-off:deferparse -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>iterator_next_caches.js</files>
      <compile-flags>-args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>iteratorclose.js</files>
      <compile-flags>-force:deferparse -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_issue_1496.js</files>
      <compile-flags>-mic:1 -maxsimplejitruncount:2</compile-flags>
      <baseline>bug_issue_1496.baseline</baseline>
    </default>
  </test>
  <test>
    <default>
      <files>bug_issue_3247.js</files>
      <baseline>bug_issue_3247.baseline</baseline>
      <tags>exclude_sanitize_address</tags>
    </default>
  </test>
  <test>
    <default>
      <files>typedarray_bugs.js</files>
      <compile-flags>-args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>bug-OS10595959.js</files>
      <compile-flags>-maxsimplejitruncount:1 -maxinterpretcount:1 -off:stackargopt -stress:bailonnoprofile -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>deferSpreadRestError.js</files>
      <compile-flags>-args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_OS10898061.js</files>
    </default>
  </test>
  <test>
    <default>
      <files>bug_OS14880030.js</files>
      <compile-flags>-args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_OS14880030.js</files>
      <compile-flags>-force:deferparse -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_OS13976524.js</files>
      <compile-flags>-force:deferparse -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_OS15679026.js</files>
      <compile-flags>-args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_issue_4635.js</files>
      <compile-flags>-args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>bug_OS13976524.js</files>
      <tags>BugFix</tags>
      <compile-flags>-force:deferparse -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>DeferParseLambda.js</files>
      <compile-flags>-off:deferparse -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>DeferParseLambda.js</files>
      <compile-flags>-off:deferparse -args summary -endargs -deferparse</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>DeferParseLambda.js</files>
      <compile-flags>-off:deferparse -args summary -endargs -deferparse -forceundodefer</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>DeferParseMethods.js</files>
      <compile-flags>-off:deferparse -args summary -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>DeferParseMethods.js</files>
      <compile-flags>-off:deferparse -args summary -endargs -deferparse</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>DeferParseMethods.js</files>
      <compile-flags>-off:deferparse -args summary -endargs -deferparse -forceundodefer</compile-flags>
    </default>
  </test>
<test>
  <default>
    <files>function-expr-capture.js</files>
  </default>
</test>
<test>
  <default>
    <files>setUserFuncAsProto.js</files>
  </default>
</test>
<test>
  <default>
    <files>function-expr-capture2.js</files>
    <compile-flags>-force:deferparse</compile-flags>
  </default>
</test>
<test>
  <default>
    <files>supersetter.js</files>
    <baseline>supersetter.baseline</baseline>
  </default>
</test>
<test>
  <default>
    <files>bug_OS16649604.js</files>
    <compile-flags>-args summary -endargs</compile-flags>
  </default>
</test>
<test>
  <default>
    <files>bug_OS17895855.js</files>
    <compile-flags>-args summary -endargs</compile-flags>
  </default>
</test>
<test>
  <default>
    <files>super_bugs.js</files>
    <compile-flags>-args summary -endargs</compile-flags>
  </default>
</test>
<test>
  <default>
    <files>bug_issue_5994.js</files>
    <compile-flags>-MuteHostErrorMsg</compile-flags>
    <baseline>bug_issue_5994.baseline</baseline>
  </default>
</test>
<test>
  <default>
    <files>bug_19225364.js</files>
    <compile-flags>-bgjit- -loopinterpretcount:1</compile-flags>
    <baseline>bug_19225364.baseline</baseline>
  </default>
</test>
</regress-exe>
